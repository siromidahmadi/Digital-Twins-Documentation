    {
  "schema": {
    "id": "string (unique, slug-like)",
    "name": "string",
    "owner": "string",
    "category": "string (computer-science | architecture)",
    "goal": "string",
    "features": ["string"],
    "fileStructure": "string (preformatted code block text)",
    "modularArchitecture": [
      {"title":"string","function":"string","dataTypes":["string"],"problemSolved":"string"}
    ],
    "moduleFunctions": ["string"],
    "problem": "string",
    "dataTypes": ["string"],
    "conclusion": "string"
  },
  "projects": [
    {
      "id": "alpha-earth",
      "name": "Alpha Earth",
      "owner": "Team Core",
      "category": "computer-science",
      "goal": "Build a premium, vector-enabled Earth visualization assistant with real-time datasets and AI-guided navigation.",
      "features": [
        "Real-time data integration (USGS, FIRMS, OpenWeather, OpenAQ)",
        "Vector navigation & 3D routes",
        "AI assistant & contextual guidance"
      ],
      "fileStructure": "/project-root\n├─ /client         # Web UI (React/Vue or static)\n│  ├─ /components\n│  ├─ /styles\n│  └─ index.html\n├─ /server         # API & data ingestion\n│  ├─ /routes\n│  ├─ /workers\n│  └─ ingest.js\n├─ /data           # configs & sample datasets\n├─ /docs           # additional documentation\n└─ README.md",
      "modularArchitecture": [
        {"title":"Ingest","function":"Pull feeds and normalize to GeoJSON","dataTypes":["GeoJSON","CSV"],"problemSolved":"Unifies multiple source formats"},
        {"title":"API","function":"Serve filtered data & stats","dataTypes":["GeoJSON","JSON"],"problemSolved":"Provides performant access"},
        {"title":"Visualization","function":"Render globe, routes, annotations","dataTypes":["Vector tiles","Raster tiles"],"problemSolved":"Interactive exploration"},
        {"title":"Assistant","function":"Interpret queries and explain anomalies","dataTypes":["Text","JSON"],"problemSolved":"Guided analysis"}
      ],
      "moduleFunctions": [
        "Ingest: Fetch & normalize data",
        "Storage: Time series, tile caches, metadata",
        "API: Data & analytics endpoints",
        "UI/Vis: Maps, controls, user photo",
        "Assistant: NL queries & guidance"
      ],
      "problem": "Geospatial data is scattered and hard to navigate; centralize feeds and add intuitive guidance.",
      "dataTypes": ["GeoJSON","CSV/TSV","Raster tiles","Time series","Binary"],
      "conclusion": "Digital Twins Project demonstrates a unified, guided workflow for analyzing live geospatial data."
    },
    {
      "id": "ocean-watch",
      "name": "Ocean Watch",
      "owner": "Alice",
      "category": "computer-science",
      "goal": "Monitor ocean surface temperature anomalies with alerting.",
      "features": ["NOAA SST feed","Anomaly detection","Email alerts"],
      "fileStructure": "/ocean-watch\n├─ /collector\n├─ /api\n└─ /ui",
      "modularArchitecture": [
        {"title":"Collector","function":"Fetch SST tiles & sample","dataTypes":["Raster"],"problemSolved":"Gather inputs"},
        {"title":"Detector","function":"Compute anomalies","dataTypes":["Array"],"problemSolved":"Spot trends"}
      ],
      "moduleFunctions": ["Collector","Detector","API","UI"],
      "problem": "Slow detection of heatwaves.",
      "dataTypes": ["Raster","JSON"],
      "conclusion": "Early alerts help stakeholders respond quickly to marine heatwaves."
    },
    {
      "id": "urban-habitat",
      "name": "Urban Habitat",
      "owner": "Design Guild",
      "category": "architecture",
      "goal": "Document and simulate mixed-use blocks for resilient urban neighborhoods.",
      "features": ["Parametric block generator","Sun/wind analysis","Materials library"],
      "fileStructure": "/urban-habitat\n├─ /studio\n├─ /analysis\n└─ /docs",
      "modularArchitecture": [
        {"title":"Generator","function":"Create block variants","dataTypes":["JSON"],"problemSolved":"Faster iterations"},
        {"title":"Analysis","function":"Run sun and wind sims","dataTypes":["CSV","Images"],"problemSolved":"Evidence-based design"}
      ],
      "moduleFunctions": ["Generator","Analysis","Report"],
      "problem": "Manual planning iterations are slow and hard to compare.",
      "dataTypes": ["JSON","CSV","Images"],
      "conclusion": "Parametric generation paired with analysis speeds up urban design decisions."
    }
  ]
}
